{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrazaldana/Desktop/code/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport CardChoices from \"./components/CardChoices\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./choices.json\";\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport \"./App.css\";\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      currentScore: 0,\n      topScore: 0,\n      rightWrong: \"\",\n      clicked: []\n    };\n\n    this.handleClick = id => {\n      if (this.state.clicked.indexOf(id) === -1) {\n        this.handleIncrement();\n        this.setState({\n          clicked: this.state.clicked.concat(id)\n        });\n      } else {\n        this.handleReset();\n      }\n    };\n\n    this.handleIncrement = () => {\n      const newScore = this.state.currentScore + 1;\n      this.setState({\n        currentScore: newScore,\n        rightWrong: \"\"\n      });\n\n      if (newScore >= this.state.topScore) {\n        this.setState({\n          topScore: newScore\n        });\n      } else if (newScore === 12) {\n        this.setState({\n          rightWrong: \"You Win!\"\n        });\n      }\n\n      this.handleShuffle();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        currentScore: 0,\n        topScore: this.state.topScore,\n        rightWrong: \"\",\n        clicked: []\n      });\n      this.handleShuffle();\n    };\n\n    this.handleShuffle = () => {\n      let shuffleFriends = shuffleFriends(friends);\n      this.setState({\n        friends: shuffleFriends\n      });\n    };\n  }\n\n  // handleRemove = id => {\n  //   const filteredFriends = this.state.friends.filter(f=>  f.id !== id);\n  //   this.setState({friends: filteredFriends});\n  // };\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.currentScore,\n      topScore: this.state.topScore,\n      rightWrong: this.state.rightWrong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.friends.map(f => React.createElement(CardChoices, {\n      id: f.id,\n      image: f.image,\n      handleClick: () => this.handleRemove(f.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexandrazaldana/Desktop/code/clicky-game/src/App.js"],"names":["React","Component","CardChoices","Wrapper","friends","Header","Jumbotron","shuffleFriends","array","i","length","j","Math","floor","random","App","state","currentScore","topScore","rightWrong","clicked","handleClick","id","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","render","map","f","image","handleRemove"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CardChoices from \"./components/CardChoices\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./choices.json\";\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport \"./App.css\";\n\nfunction shuffleFriends(array){\n  for (let i = array.length - 1; i >0; i--){\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  state= {\n    friends,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: []\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({\n        clicked: this.state.clicked.concat(id)\n      });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      rightWrong: \"\"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({\n        topScore: newScore\n      });\n    } else if (newScore === 12) {\n      this.setState({\n        rightWrong: \"You Win!\"\n      });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightWrong: \"\",\n      clicked: []\n    });\n    this.handleShuffle();\n  }\n\n  handleShuffle = () => {\n    let shuffleFriends = shuffleFriends(friends);\n    this.setState({\n      friends: shuffleFriends\n    });\n  }\n\n  // handleRemove = id => {\n  //   const filteredFriends = this.state.friends.filter(f=>  f.id !== id);\n  //   this.setState({friends: filteredFriends});\n  // };\n\nrender() {\n  return (\n    <Wrapper>\n      <Header \n      score={this.state.currentScore}\n      topScore={this.state.topScore}\n      rightWrong={this.state.rightWrong}\n      />\n      <Jumbotron></Jumbotron>\n      <div className=\"container cards\">\n      <div className=\"row\">\n      {this.state.friends.map(f => (\n        <CardChoices\n          id={f.id}\n          image={f.image}\n          handleClick={()=> this.handleRemove(f.id)}\n        />\n      ))}\n      </div>\n      </div>\n    </Wrapper>\n  );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}